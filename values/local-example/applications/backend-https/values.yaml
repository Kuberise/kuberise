image:
  repository: nginx
  tag: alpine

useHttps: true

containerPorts:
  https: 8443

service:
  type: ClusterIP
  ports:
    https: 443

ingress:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    cert-manager.io/cluster-issuer: "selfsigned-clusterissuer"
  tls:
   - secretName: "backend-https-tls"
     hosts:
       - '{{ include "generic-deployment.fullname" . }}.{{ $.Values.domain }}'

config:
  mountPath: /etc/nginx/conf.d
  data:
    default.conf: |
      server {
        listen 8443 ssl;
        server_name backend-https.minikube.kuberise.dev;

        ssl_certificate /etc/nginx/certs/tls.crt;
        ssl_certificate_key /etc/nginx/certs/tls.key;
        ssl_trusted_certificate /etc/nginx/certs/ca.crt;

        location / {
          root /usr/share/nginx/html;
          index index.html;
        }

        error_page 403 404 500 502 503 504 /custom_50x.html;
      }

      server {
        listen 80;
        return 301 https://$host$request_uri;
      }

volumes:
- name: tls-cert
  secret:
    secretName: backend-https-tls

volumeMounts:
- name: tls-cert
  mountPath: /etc/nginx/certs
  readOnly: true

# sample https probes
livenessProbe:
  httpGet:
    path: /health
    port: https
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
readinessProbe:
  httpGet:
    path: /ready
    port: https
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3
startupProbe:
  httpGet:
    path: /startup
    port: https
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 30
