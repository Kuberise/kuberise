apiVersion: generators.external-secrets.io/v1alpha1
kind: ClusterGenerator
metadata:
  name: password-generator
spec:
  kind: Password
  generator:
    passwordSpec:
      length: 32
      digits: 5
      symbols: 0
      symbolCharacters: ""
      noUpper: false
      allowRepeat: true
---
# ==========================================
# Generate Random Strings
# ==========================================
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: pgadmin-random-string
spec:
  refreshInterval: "0" # 0 means the secret is not re-generated
  target:
    name: pgadmin-random-string
    creationPolicy: Owner
  dataFrom:
    - sourceRef:
        generatorRef:
          apiVersion: generators.external-secrets.io/v1alpha1
          kind: ClusterGenerator
          name: password-generator
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: grafana-random-string
spec:
  refreshInterval: "0" # 0 means the secret is not re-generated
  target:
    name: grafana-random-string
    creationPolicy: Owner
  dataFrom:
    - sourceRef:
        generatorRef:
          apiVersion: generators.external-secrets.io/v1alpha1
          kind: ClusterGenerator
          name: password-generator
---
# ==========================================================
# ClusterSecretStore to access those random strings
# ==========================================================
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: k8s-store
spec:
  provider:
    kubernetes:
      # the store is able to pull only from this namespace
      remoteNamespace: raw
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          key: ca.crt
---
# ==================================================================================================
# Generate client-secrets for keycloak namespace and also for the client application namespaces
# ==================================================================================================
# TODO: use clusterexternalsecret instead of externalsecret
# grafana
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: grafana-client-secret
  namespace: monitoring
spec:
  refreshInterval: 1h
  target:
    name: grafana-client-secret
    creationPolicy: Owner
  dataFrom:
    find:
      name: grafana-random-string
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: grafana-client-secret
  namespace: keycloak
spec:
  refreshInterval: 1h
  target:
    name: grafana-client-secret
    creationPolicy: Owner
  dataFrom:
    find:
      name: grafana-random-string
