# ==========================================
# Generate Secret for user:application in database:app
# ==========================================
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: db-app-user-application-secret-generate
spec:
  refreshInterval: "0"
  target:
    name: db-app-user-application-random-string
    creationPolicy: Owner
  dataFrom:
    - sourceRef:
        generatorRef:
          apiVersion: generators.external-secrets.io/v1alpha1
          kind: ClusterGenerator
          name: password-generator
---
# ==================================================================================================
# Copy secrets for specified namespace
# ==================================================================================================
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: db-app-user-application-secret-copy
  namespace: postgres
spec:
  secretStoreRef:
    name: k8s-store
    kind: ClusterSecretStore

  refreshInterval: "1h"
  target:
    creationPolicy: Owner
    name: database-app
    template:
      data:
        password: "{{ `{{ .password }}` }}"
        dbname: "app"
        host: "database-rw"
        port: "5432"
        user: "application"
        username: "application"
  data:
    - secretKey: password
      remoteRef:
        key: db-app-user-application-random-string
        property: password
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: db-app-user-application-secret-copy
  namespace: keycloak
spec:
  secretStoreRef:
    name: k8s-store
    kind: ClusterSecretStore

  refreshInterval: "1h"
  target:
    creationPolicy: Owner
    name: pg-secret
    template:
      data:
        KC_DB_PASSWORD: "{{ `{{ .password }}` }}"
        KC_DB_USERNAME: "application"
  data:
    - secretKey: password
      remoteRef:
        key: db-app-user-application-random-string
        property: password
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: db-app-user-application-secret-copy
  namespace: backstage
spec:
  secretStoreRef:
    name: k8s-store
    kind: ClusterSecretStore

  refreshInterval: "1h"
  target:
    creationPolicy: Owner
    name: pg-secret
  data:
    - secretKey: password
      remoteRef:
        key: db-app-user-application-random-string
        property: password
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
---
