apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-job
  namespace: argocd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argocd-manager
  namespace: argocd
rules:
- apiGroups: ["argoproj.io"]
  resources: ["appprojects", "applications"]
  verbs: ["get", "list", "watch", "create", "update", "delete", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argocd-manager-binding
  namespace: argocd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-manager
subjects:
- kind: ServiceAccount
  name: argocd-job
  namespace: argocd
---
apiVersion: batch/v1
kind: Job
metadata:
  name: argocd-app-deploy
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      serviceAccountName: argocd-job
      containers:
      - name: kubectl
        image: bitnami/kubectl:latest
        env:
        - name: ENV
          value: {{ .Values.global.environment }}
        - name: REPO
          value: {{ .Values.global.spec.source.repoURL }}
        - name: REVISION
          value: {{ .Values.global.spec.source.targetRevision }}
        - name: SERVER
          value: {{ .Values.global.spec.destination.server }}
        command:
          - /bin/bash
          - -c
          - |
            cat <<EOF | kubectl apply -f -
            apiVersion: argoproj.io/v1alpha1
            kind: AppProject
            metadata:
              name: platform-$ENV
              labels:
                team: platform
            spec:
              sourceRepos:
              - $REPO
              destinations:
              - name: '*'
                namespace: '*'
                server: $SERVER
              clusterResourceWhitelist:
              - group: '*'
                kind: '*'
              namespaceResourceWhitelist:
              - group: '*'
                kind: '*'
            ---
            apiVersion: argoproj.io/v1alpha1
            kind: Application
            metadata:
              name: app-of-apps-$ENV
              finalizers:
                - resources-finalizer.argocd.argoproj.io
              labels:
                team: platform
            spec:
              destination:
                namespace: argocd
                server: $SERVER
              project: platform-$ENV
              source:
                path: ./app-of-apps
                repoURL: $REPO
                targetRevision: '$REVISION'
                helm:
                  values: |
                    global:
{{ .Values.global | toYaml | indent 22 }}
                    applications:
{{ .Values.applications | toYaml | indent 22 }}
                    helmCharts:
{{ .Values.helmCharts | toYaml | indent 22 }}
              syncPolicy:
                automated:
                  prune: true
                  selfHeal: true
            EOF
      restartPolicy: Never
