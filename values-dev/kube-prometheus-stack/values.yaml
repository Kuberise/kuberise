grafana:
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Loki
        type: loki
        access: proxy
        url: http://loki-loki-distributed-gateway
        isDefault: false
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    hosts:
      - grafana.127.0.0.1.nip.io
    path: /

  grafana.ini:
    auth.generic_oauth:
      enabled: true
      name: OAuth
      allow_sign_up: true
      client_id: grafana
      client_secret: $__file{/etc/grafana/secrets/clientSecret}
      scopes: openid profile email
      auth_url: http://keycloak.127.0.0.1.nip.io/realms/platform/protocol/openid-connect/auth
      token_url: http://keycloak.127.0.0.1.nip.io/realms/platform/protocol/openid-connect/token
      api_url: http://keycloak.127.0.0.1.nip.io/realms/platform/protocol/openid-connect/userinfo
      role_attribute_path: contains(realm_access.roles[*], 'admin') && 'Admin' || contains(realm_access.roles[*], 'editor') && 'Editor' || 'Viewer'
    server:
      root_url: http://grafana.127.0.0.1.nip.io/


  extraSecretMounts:
    - name: grafana-keycloak-secrets
      mountPath: /etc/grafana/secrets
      secretName: grafana-keycloak-secret
      readOnly: true

prometheus:
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - prometheus.127.0.0.1.nip.io
    paths:
      - /
    pathType: Prefix
